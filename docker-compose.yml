# docker-compose.yml

version: "3.7"

services:

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:12
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.postgres
    networks:
      - main
    restart: always

  pgbackups:
    container_name: pgbackups
    hostname: pgbackups
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: postgres:postgres
    volumes:
      - ./backups:/backups
    links:
      - postgres
    depends_on:
      - postgres
    env_file:
      - .env.postgres
    networks:
      - main

  web:
    build: Back
    container_name: web
    expose:
      - "8000"
    command: sh -c "wait-for postgres:5432\
      && python manage.py makemigrations&& python manage.py migrate&& gunicorn Config.asgi:application --bind 0.0.0.0:8000 -w 3 -k uvicorn.workers.UvicornWorker --log-file -"
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/data
      - ./wait-for:/bin/wait-for
    env_file:
      - .env.back
    hostname: web
    image: web-image
    networks:
      - main
    depends_on:
      - postgres
    restart: always

  nginx:
    container_name: nginx
    image: nginx:alpine
    hostname: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./wait-for:/bin/wait-for
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/data
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - main
    restart: always

networks:
  main:
    name: main
#    external: true
    driver: bridge

volumes:
  static_volume:
  media_volume:
  postgres_data:
